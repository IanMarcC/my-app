{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["API_KEY","request","require","FullBar","props","state","a_list","source","keyword","handleInputChange","bind","handleOptionChange","keywordSearch","callback","event","this","setState","target","value","preventDefault","terms","headers","url","error","response","body","statusCode","info","JSON","parse","console","log","articles","map","article","key","href","title","className","id","onChange","type","placeholder","form","onClick","length","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gbAGMA,G,OAAU,oCAKVC,GAJUC,EAAQ,KAIRA,EAAQ,MAiBlBC,E,YACL,WAAYC,GAAQ,IAAD,8BAClB,4CAAMA,KACDC,MAAQ,CAACC,OAAQ,GAAIC,OAAQ,WAAYC,QAAS,IACvD,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAKC,mBAAqB,EAAKA,mBAAmBD,KAAxB,gBAC1B,EAAKE,cAAgB,EAAKA,cAAcF,KAAnB,gBACrB,EAAKG,SAAW,EAAKA,SAASH,KAAd,gBANE,E,+EAQDI,GACjBC,KAAKC,SAAS,CAACR,QAASM,EAAMG,OAAOC,U,yCAEnBJ,GAClBC,KAAKC,SAAS,CAACT,OAAQO,EAAMG,OAAOC,U,oCAGvBJ,GAEbA,EAAMK,iBACN,IAAIC,EACCL,KAAKV,MAAMG,QADZY,EAEAL,KAAKV,MAAME,OAOf,OAAON,EANO,CACboB,QAAS,CACT,YAAarB,GAEbsB,IAAK,uCAA8CF,EAAW,YAAcA,GAErDL,KAAKF,Y,+BAGrBU,EAAOC,EAAUC,GACxB,IAAKF,GAAgC,KAAvBC,EAASE,WAAmB,CACzC,IAAMC,EAAOC,KAAKC,MAAMJ,GAOxB,OANAK,QAAQC,IAAIJ,GACZZ,KAAKC,SAAU,CAACV,OAASqB,EAAKK,SAASC,KAAI,SAACC,GAAD,OAC3C,wBAAIC,IAAKD,EAAQZ,KAChB,uBAAGc,KAAMF,EAAQZ,KAAMY,EAAQG,aAEhCP,QAAQC,IAAIhB,KAAKV,MAAMC,QAChBS,KAAKV,MAAMC,U,+BAKpB,OACC,yBAAKgC,UAAU,aACf,0BAAMC,GAAG,SACT,4BAAQrB,MAAOH,KAAKV,MAAME,OAAQiC,SAAUzB,KAAKJ,mBAAoB4B,GAAG,aACxE,4BAAQrB,MAAM,YAAd,YACA,4BAAQA,MAAM,oBAAd,oBACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,UAAd,eACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,gBAAd,iBACA,4BAAQA,MAAM,sBAAd,sBACA,4BAAQA,MAAM,2BAAd,2BACA,4BAAQA,MAAM,uBAAd,wBAEA,2BAAOuB,KAAK,OAAOvB,MAAOH,KAAKV,MAAMG,QAASkC,YAAY,iBAAiBF,SAAUzB,KAAKN,kBAAmB8B,GAAG,cAChH,4BAAQI,KAAK,QAAQC,QAAS7B,KAAKH,eAAnC,WAEA,yBAAK0B,UAAU,OACkB,IAA7BvB,KAAKV,MAAMC,OAAOuC,OAAe,KAAO,4BAAK9B,KAAKV,MAAMC,c,GAvEzCwC,IAAMC,WA8EFD,IAAMC,UA8CVD,IAAMC,UAgCJD,IAAMC,U,IAUfC,EA1Bf,WAEC,OADAlB,QAAQC,IAAI,QAEZ,yBAAKO,UAAU,OACd,6CACA,oHACA,yBAAKA,UAAU,UACd,kBAAC,EAAD,OAJF,cAMY,uBAAGF,KAAK,wBAAR,SANZ,QAMyD,uBAAGA,KAAK,wBAAR,WAA0C,6BANnG,WAOS,uBAAGA,KAAK,+BAAR,iBCnKUa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.75c46cd3.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\nconst API_KEY = '3166070d283249a5aedda56abddc8d0d';\r\nconst NewsAPI = require('newsapi');\r\n\r\n//Attempt to use the request library to make API calls\r\n\r\nconst request = require('request');\r\n\r\n\r\n\r\nclass NewsSite {\r\n\tconstructor(name, tag){\r\n\t\tthis.name = name;\r\n\t\tthis.tag = tag;\r\n\t}\r\n\tgetName() {\r\n\t\treturn this.name;\r\n\t}\r\n\tgetTag() {\r\n\t\treturn this.tag;\r\n\t}\r\n}\r\n\r\nclass FullBar extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {a_list: [], source: 'bbc-news', keyword: ''};\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t\tthis.handleOptionChange = this.handleOptionChange.bind(this);\r\n\t\tthis.keywordSearch = this.keywordSearch.bind(this);\r\n\t\tthis.callback = this.callback.bind(this);\r\n\t}\r\n\thandleInputChange(event) {\r\n\t\tthis.setState({keyword: event.target.value});\r\n\t}\r\n\thandleOptionChange(event) {\r\n\t\tthis.setState({source: event.target.value});\r\n\t}\r\n\t\r\n\tkeywordSearch(event) {\r\n\t\t\r\n\t\tevent.preventDefault();\r\n\t\tvar terms = {\r\n\t\t\tkw: this.state.keyword,\r\n\t\tso: this.state.source};\r\n\t\tvar options = {\r\n\t\t\theaders: {\r\n\t\t\t'X-Api-Key': API_KEY\r\n\t\t\t},\r\n\t\t\turl: 'https://newsapi.org/v2/everything?' + 'q=' + terms.kw + '&sources=' + terms.so \r\n\t\t}\r\n\t\treturn request(options, this.callback);\r\n\t}\r\n\t\r\n\tcallback(error, response, body) {\r\n\t\t\tif (!error && response.statusCode == 200) {\r\n\t\t\t\tconst info = JSON.parse(body);\r\n\t\t\t\tconsole.log(info);\r\n\t\t\t\tthis.setState( {a_list : info.articles.map((article) =>\r\n\t\t\t\t<li key={article.url}>\r\n\t\t\t\t\t<a href={article.url}>{article.title}</a>\r\n\t\t\t\t</li>)});\r\n\t\t\t\tconsole.log(this.state.a_list);\r\n\t\t\t\treturn this.state.a_list;\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\trender()  {\r\n\t\treturn (\r\n\t\t\t<div className=\"searchBar\">\r\n\t\t\t<form id=\"form1\">\r\n\t\t\t<select value={this.state.source} onChange={this.handleOptionChange} id=\"selectbox\">\r\n\t\t\t<option value=\"abc-news\">ABC News</option>\r\n\t\t\t<option value=\"associated-press\">Associated Press</option>\r\n\t\t\t<option value=\"bbc-news\">BBC News</option>\r\n\t\t\t<option value=\"cbs-news\">CBS News</option>\r\n\t\t\t<option value=\"cnbc\">CNBC</option>\r\n\t\t\t<option value=\"cnn\">CNN</option>\r\n\t\t\t<option value=\"cnn-es\">CNN Spanish</option>\r\n\t\t\t<option value=\"espn\">ESPN</option>\r\n\t\t\t<option value=\"fox-news\">Fox News</option>\r\n\t\t\t<option value=\"IGN\">IGN</option>\r\n\t\t\t<option value=\"MSNBC\">MSNBC</option>\r\n\t\t\t<option value=\"nbc-news\">NBC News</option>\r\n\t\t\t<option value=\"politico\">Politico</option>\r\n\t\t\t<option value=\"reddit-r-all\">Reddit /r/all</option>\r\n\t\t\t<option value=\"the-new-york-times\">The New York Times</option>\r\n\t\t\t<option value=\"the-wall-street-journal\">The Wall Street Journal</option>\r\n\t\t\t<option value=\"the-washington-post\">The Washington Post</option>\r\n\t\t\t</select>\r\n\t\t\t<input type=\"text\" value={this.state.keyword} placeholder=\"Search term...\" onChange={this.handleInputChange} id=\"searchbox\"></input>\r\n\t\t\t<button form=\"form1\" onClick={this.keywordSearch}>Search</button>\r\n\t\t\t</form>\r\n\t\t\t<div className=\"art\">\r\n\t\t\t\t{ (this.state.a_list.length === 0 ? null : <h4>{this.state.a_list}</h4>) }\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n}\r\n\r\nclass ArticleList extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {a_list : []};\r\n\t\tthis.keywordSearch = this.keywordSearch.bind(this);\r\n\t\tthis.callback = this.callback.bind(this);\r\n\t}\r\n\t\t\r\n\tkeywordSearch(event) {\r\n\t\t\r\n\t\tevent.preventDefault();\r\n\t\tvar options = {\r\n\t\t\turl: 'https://newsapi.org/v2/everything?',\r\n\t\t\theaders: {\r\n\t\t\t'X-Api-Key': API_KEY\r\n\t\t\t},\r\n\t\t\tkeyword: '',\r\n\t\t\tsource: ''\r\n\t\t}\r\n\t\treturn request(options, this.callback);\r\n\t}\r\n\t\r\n\tcallback(error, response, body) {\r\n\t\t\tif (!error && response.statusCode == 200) {\r\n\t\t\t\tconst info = JSON.parse(body);\r\n\t\t\t\tthis.setState( {a_list : info.articles.map((article) =>\r\n\t\t\t\t<li style={{font: \"Courier\"}} key={article.url}>\r\n\t\t\t\t\t{article.title}\r\n\t\t\t\t</li>)});\r\n\t\t\t\tconsole.log(this.state.a_list);\r\n\t\t\t\treturn this.state.a_list;\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\trender() {\r\n\t\treturn (<div className=\"art\">\r\n\t\t\t\t<button form=\"form1\" onClick={this.keywordSearch}>Search</button>\r\n\t\t\t\t<br></br>\r\n\t\t\t\t{ (this.state.a_list.length === 0 ? null : <h4>{this.state.a_list}</h4>) }\r\n\t\t\t\t</div>);\r\n\t}\r\n}\r\n\t\r\n\r\n\r\n\r\nclass Article extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t<div className=\"indivarticle\">\r\n\t\t<h3><b>{this.props.title}</b></h3>\r\n\t\t<br></br>\r\n\t\t<p>{this.props.description}</p>\r\n\t\t<br></br>\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction App() {\r\n\tconsole.log(\"meme\");\r\n\treturn (\r\n\t<div className=\"App\">\r\n\t\t<h1>News Searcher</h1>\r\n\t\t<h3>Look up articles relating to your keyword or phrase from various news organizations.</h3>\r\n\t\t<div className=\"search\">\r\n\t\t\t<FullBar />\r\n\t\t</div>\r\n\t\tPowered by <a href=\"https://reactjs.org/\">React</a> and <a href=\"https://newsapi.org/\">NewsAPI</a><br></br>\r\n\t\tMade by <a href=\"https://github.com/IanMarcC\">Ian Cumming</a>\r\n\t\t\r\n\t</div>\r\n\t);\r\n}\r\n\r\nclass SearchBox extends React.Component {\r\n\trender() {\r\n\t\treturn (<input type=\"text\" placeholder=\"Enter keyword/phrase\" name=\"searchbox\"></input>);\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default App;\r\n\t","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}